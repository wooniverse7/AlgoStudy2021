#include<iostream>

using namespace std;

int x1, y11, x2, y2, x3, y3;

int main() {
	/*cin >> x1 >> y11;
	cin >> x2 >> y2;
	cin >> x3 >> y3;

	x1 ^= x2;
	x1 ^= x3;
	y11 ^= y2;
	y11 ^= y3;
	cout << x1 << " " << y11;*/

	// 같은 수를 두번 xor하면 같아지는 xor성질을 이용
	// 세 점의 각 x좌표 y좌표에서 같은 부분이 꼭 두 번 있으니 나머지 한 점만 남게된다.

	// 1. 값이 0인 변수에 A 값의 XOR 연산을 하면 해당 변수는 A가 된다.
	// -모든 비트가 0이므로 1인 비트에 대한 부분만 1이 되기 때문
	// 2. 값이 A인 변수에 B 값의 XOR 연산을 두 번 하면 원래의 값 A가 된다.
	// - 최초 연산일 때 값이 변경된 부분만 다시 변경되기 때문.
	// - 예시) 01010101 ^ 00110011 ^ 00110011 = 01100110 ^ 00110011 = 01010101
	
	int x=0, y=0, xp, yp, i=3;

	while (i--) {
		cin >> xp >> yp;
		x ^= xp;
		y ^= yp;
	}
	cout << x << " " << y;
	
}